volumes:
    app_data:
        name: hds_app_data
    static_files:
        name: hds_static_files
    media_files:
        name: hds_media_files
    certbot_web:
        name: hds_certbot_web
    certbot_certs:
        name: hds_certbot_certs
    nginx_config:
        name: hds_nginx_config

services:
    django:
        build:
            context: .
            dockerfile: Dockerfile
        image: hds:production
        restart: unless-stopped
        container_name: hds_django_production
        command: /app/docker/start.sh server
        depends_on:
            - postgres
        env_file:
            - .prod.env
        ports:
            - 8000:8000
        volumes:
            - static_files:/app/static
            - media_files:/app/media

    postgres:
        image: postgres:16.4-bullseye
        container_name: hds_postgres_production
        hostname: hds-postgres
        volumes:
            - app_data:/var/lib/postgresql/data
        env_file:
            - .prod.env
    
    
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        image: nginx:production
        container_name: hds_nginx_production
        ports:
            - 80:80
            - 443:443
        depends_on:
            - django
        volumes:
            - static_files:/app/static:ro
            - media_files:/app/media:ro
            - certbot_web:/vol/www:ro
            - certbot_certs:/etc/letsencrypt/:ro
            - nginx_config:/etc/nginx/:rw
        env_file:
            - .prod.env

    certbot:
        container_name: hds_certbot_production      
        build:
            context: ./certbot
        depends_on:
            - nginx
        env_file:
            - .prod.env
        volumes:
            - certbot_web:/vol/www:rw
            - certbot_certs:/etc/letsencrypt/:rw
            - nginx_config:/etc/nginx/:rw
        restart: unless-stopped
